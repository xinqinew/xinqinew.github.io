<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Socket - 标签 - Hmily云笔记</title>
        <link>https://xinqinew.github.io/tags/socket/</link>
        <description>Socket - 标签 - Hmily云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 23 Apr 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://xinqinew.github.io/tags/socket/" rel="self" type="application/rss+xml" /><item>
    <title>C&#43;&#43;</title>
    <link>https://xinqinew.github.io/2022/04/c-socket%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Sat, 23 Apr 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/04/c-socket%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>socket编程演示 socket() 创建套接字 通过 socket() 函数创建了一个套接字，参数 AF_INET 表示使用 IPv4 地址，SOCK_STREAM 表示使用面向连接的数据传输方式，IP]]></description>
</item><item>
    <title>C&#43;&#43; select分析2</title>
    <link>https://xinqinew.github.io/2022/01/c-select%E5%88%86%E6%9E%902/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/c-select%E5%88%86%E6%9E%902/</guid>
    <description><![CDATA[网上一篇博主写的select，十分透彻，参考linux下多路复用模型之Select模型 本文主要记录了select一些用法和自己写的一个用se]]></description>
</item><item>
    <title>Lua Socket in Win</title>
    <link>https://xinqinew.github.io/2022/01/lua-socket-in-win/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/lua-socket-in-win/</guid>
    <description><![CDATA[Lua Socket在Windows平台下的使用 在上一篇博文中介绍了VS2015+Lua5.1.5环境的搭建，最后介绍了Lua解释器的创建。本文将]]></description>
</item><item>
    <title>Lua Socket with VSCode in Win10</title>
    <link>https://xinqinew.github.io/2022/01/lua-socket-with-vscode-in-win10/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/lua-socket-with-vscode-in-win10/</guid>
    <description><![CDATA[使用Lua 在VsCode 环境下 开发 需要使用到 Socket 、Http、Udp、Tcp 开发 都可以使用 C库 LuaSocket 先下载VSCode 插件以及 Lua 的Windows 运行]]></description>
</item><item>
    <title>Lua Socket分析1</title>
    <link>https://xinqinew.github.io/2022/01/lua-socket%E5%88%86%E6%9E%901/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/lua-socket%E5%88%86%E6%9E%901/</guid>
    <description><![CDATA[LuaSocket 是 Lua 的网络模块库，它可以很方便地提供 TCP、UDP、DNS、FTP、HTTP、SMTP、MIME 等多种网络协议的访问操作。 它由两部分组成：]]></description>
</item><item>
    <title>Lua Socket分析2</title>
    <link>https://xinqinew.github.io/2022/01/lua-socket%E5%88%86%E6%9E%902/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/lua-socket%E5%88%86%E6%9E%902/</guid>
    <description><![CDATA[实例解析lua中的socket（TCP，UDP） 首先，安装lua下的socket库。我在ubuntu下安装测试的。安装完成后会有 /usr/local/lib/lua/5.1/socket/core.so 直接上例子]]></description>
</item><item>
    <title>Lua Socket笔记</title>
    <link>https://xinqinew.github.io/2022/01/lua-socket%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/lua-socket%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[完整说明，见引用 https://lunarmodules.github.io/luasocket/reference.html select用法 等待多个套接字更改状态 1 socket.select(recvt, sendt [, timeout]) 参数： Recvt是一个带有套接字的数组，用于测试可供读取(接收)的字符 se]]></description>
</item><item>
    <title>Mac Socket</title>
    <link>https://xinqinew.github.io/2022/01/mac-socket/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/mac-socket/</guid>
    <description><![CDATA[macos下简单的socket服务器+客户端 TCP客户端服务器编程模型： 服务器： 调用socket函数创建套接字 调用bind绑定本地IP和端口]]></description>
</item><item>
    <title>mac下的socket调试工具sokit</title>
    <link>https://xinqinew.github.io/2022/01/mac%E4%B8%8B%E7%9A%84socket%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7sokit/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/mac%E4%B8%8B%E7%9A%84socket%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7sokit/</guid>
    <description><![CDATA[sokit是一款非常简单易用的tcp、udp调试工具，主要适用于专业的网络管理使用，它可以轻松查看网内的数据情况，能够有效地接收、发送、转发]]></description>
</item><item>
    <title>setsockopt用法</title>
    <link>https://xinqinew.github.io/2022/01/setsockopt%E7%94%A8%E6%B3%95/</link>
    <pubDate>Fri, 28 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/setsockopt%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[setsockopt用法详解 在TCP连接中，recv等函数默认为阻塞模式(block)，即直到有数据到来之前函数不会返回，而我们有时则需要一]]></description>
</item></channel>
</rss>
