<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GitHub on 辛琪的笔记</title>
    <link>http://example.org/github/</link>
    <description>Recent content in GitHub on 辛琪的笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Jul 2021 19:06:21 +0800</lastBuildDate><atom:link href="http://example.org/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://example.org/github/github%E6%B1%89%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/github%E6%B1%89%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/</guid>
      <description>Github汉化及常用插件 插件 Sourcegraph Sourcegraph 可以让你在线学习代码，可以查看变量、函数等的定义和引用情况。把指针放到想查看的变量名上，它会自动显示寻找定义和引用的提示框，点击即可。
Octotree 查看整个项目的结构
油猴
Refined GitHub
 汉化 桌面版一键汉化
下载版
chrome版汉化
 GitHub那些事儿
Hexo + GitHub Pages 搭建博客</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/github/hugo_learn%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/hugo_learn%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>Hugo_learn常用命令 新建章节 hugo new &amp;ndash;kind chapter /_index.md
新建文件 hugo new //_index.md
hugo new /.md</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/github/markdown%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/markdown%E8%AF%AD%E6%B3%95/</guid>
      <description>GitBook默认使用Markdown语法。
下面这些可以作为一个快速参考和展示。更多完整的信息，请参考 John Gruber&amp;rsquo;s original spec 和 Github-flavored Markdown info page。
标题
H1 H2 H3 H4 H5 H6 对于H1和H2，有下划线样式可供选择：
Alt-H1 Alt-H2 强调
强调，又叫做斜体，使用 星号 或 下划线。
重点强调，又叫做粗体，使用 星号 或 下划线。
使用 **星号和_下划线_** 组合使用强调。
删除线使用两个波浪线。划掉这个 列表
在这个例子中，前导空格和尾部空格显示为圆点 : ⋅)
 有序列表的第一项 另外一个项 ..* 无序子列表 事实上序号不起作用，那只是一个数字而已 ..1. 有序子列表 最后一个项  &amp;hellip;你可以适当的缩紧列表项中的段落。注意上面的空行和前导空格（至少一个，但是这里我们使用三个来对齐原始的Markdown内容）。
&amp;hellip;换行而不形成段落，你需要使用两个尾部空格。.. &amp;hellip;注意这行是分开的，但还在同一个段落中。.. &amp;hellip;（这个违背了不需要尾部空格的典型的GFM换行行为）。
 无序列表可以使用星号   或者减号   或者加号 链接  有两种创建链接的方式。
内嵌式链接
带标题的内嵌式链接
引用式链接
相对引用一个库文件
你可以在引用式链接定义中使用数字
或者空着什么都不写 link text itself</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/github/readme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/readme/</guid>
      <description>GitHub 这里收录了GitHub相关资料. {% include list.liquid all=true %}</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/github/%E4%B8%8D%E9%94%99%E7%9A%84%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/%E4%B8%8D%E9%94%99%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid>
      <description>http://themes.jekyllrc.org/
https://jekyllthemes.io/
jekyll-rtd-theme
minimal-mistakes/
flexible-jekyll</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/github/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</guid>
      <description>GitHub Pages 搭建教程
如何使用 GitHub pages 首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。
进入页面后，在 Repository name 的位置填写域名，格式是 username.GitHub.io。
创建成功之后，点击右上角的 Settings
找到 GitHub Pages 选项，选择一个 GitHub 官方提供的主题
这里我们就随意选择一个主题 Cayman，来看看他的效果是什么样的
选择完毕之后 GitHub Pages 就会自动帮你生成好网站，在他跳转的界面点击 Commit changes 按钮，网站就可以访问了。
在浏览器里输入你的项目名称，比如 brick713.GitHub.io，就可以看到，你刚刚选择的主题的个人网站的页面了。
到这里如果你只是想做一个例如可以随时在互联网上访问的简历，那么你只需要 GitHub Pages 项目的主页修改你 index.md 文件就可以了，比如我给出的这个模板。
修改完后，点击上图中左下角的 Commit Changes，然后访问你的自定义域名你就可以看到如下的样式了。
如果你想做一个功能更丰富的博客，那我们继续往下走。
配置自定义域名并免费使用 HTTPS 在 2018 年 5 月 1 日之后，GitHub Pages 已经开始提供免费为自定义域名开启 HTTPS 的功能，并且大大简化了操作的流程，现在用户已经不再需要自己提供证书，只需要将自己的域名使用 CNAME 的方式指向自己的 GitHub Pages 域名即可。
首先在你的 DNS 解析里添加一条解析记录，例如我选择添加子域名 blog.moyu.life 通过 CNAME 的方式指向我刚刚自定义的 GitHub Pages 域名 brick713.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/github/%E5%AE%89%E8%A3%85hugo_-learn%E4%B8%BB%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/%E5%AE%89%E8%A3%85hugo_-learn%E4%B8%BB%E9%A2%98/</guid>
      <description>安装hugo_ learn主题 learn主题
安装 创建您的项目 cd /Volumes/video/GitHub hugo new site learn 安装主题 cd /Volumes/video/GitHub/learn/themes git clone https://github.com/matcornic/hugo-theme-learn.git 基本配置 在建站时，可以通过使用--theme选项。但是，我们建议您修改配置文件（config.toml）并将主题设置为默认。您还可以添加[outputs]启用搜索功能的部分。
# Change the default theme to be use when building the site with Hugo theme = &amp;#34;hugo-theme-learn&amp;#34; # For search functionality [outputs] home = [ &amp;#34;HTML&amp;#34;, &amp;#34;RSS&amp;#34;, &amp;#34;JSON&amp;#34;] 创建第一章页面 cd /Volumes/video/GitHub/learn/ hugo new --kind chapter basics/_index.md 通过打开给定的文件，您应该看到属性chapter=true在上面，这意味着这一页是一个_章节_。
默认情况下，所有章节和页面都创建为草稿。如果您想渲染这些页面，请删除属性draft: true来自元数据。
创建您的第一个内容页面 然后，在之前创建的章节中创建内容页面。以下为以下两种创建章节内容的方法：
hugo new basics/first-content.md hugo new basics/second-content/_index.md 通过添加一些示例内容并替换文件开头的标题值，可以随意编辑这些文件。
在本地启动网站 使用以下命令启动：
hugo serve 去http://localhost:1313</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/github/%E5%AE%89%E8%A3%85hugo%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/%E5%AE%89%E8%A3%85hugo%E5%8D%9A%E5%AE%A2/</guid>
      <description>安装hugo博客 在 macOS 上可使用 Homebrew 套件管理安裝
brew install hugo Generate new site 要產生一個新的 web site 內容，可直接執行
hugo new site ssg-site 執行後會建立一個名為 ssg-site 的資料夾，包含以下內容
. ├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts ├── static └── themes 其中
 archetypes: 放置生成文件的基礎樣板資料夾（可先暫時不管）。 config.toml: 控制 hugo 產生網頁內容的設定檔，預設使用 toml 格式。(也支援 yaml 與 json 格式) content: 放置 Markdown 文章與網頁內容的資料夾。 data: 儲存一些 configuration 檔案的地ㄌㄌ方，協助建構靜態網頁(也先不管)。 layouts: 儲存產生的網頁 layout 樣板(之後範例使用其他的 theme，先不管)。 static: 放置靜態內容，如圖片，CSS 以及 *.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://example.org/github/%E5%AE%89%E8%A3%85jekyll-rtd-theme%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/github/%E5%AE%89%E8%A3%85jekyll-rtd-theme%E5%8D%9A%E5%AE%A2/</guid>
      <description>安装jekyll-rtd-theme博客 jekyll-rtd-theme
安装配置及写作
测试文档
 安装时终端出现问题的解决办法  清空Gemfile文件内容 终端运行  bundle update Gemfile文件添加以下内容  source &amp;#34;https://rubygems.org&amp;#34; # gems.ruby-china.com gem &amp;#34;jekyll-rtd-theme&amp;#34; gem &amp;#34;github-pages&amp;#34;, group: :jekyll_plugins 终端再次运行  bundle update   一.安装 a.基于本地主题 1.清空Gemfile文件内容,并添加以下内容
source &amp;#34;https://rubygems.org&amp;#34; # gems.ruby-china.com gem &amp;#34;jekyll-rtd-theme&amp;#34; gem &amp;#34;github-pages&amp;#34;, group: :jekyll_plugins 2.将以下内容添加到您的网站 _config.yml
title: Your awesome title lang: en description: Write an awesome description for your new site here theme: jekyll-rtd-theme b.基于远程主题  将以下内容添加到您的 github 存储库 _config.yml  remote_theme: rundocs/jekyll-rtd-theme 删除任何其他theme或remote_theme条目  二.</description>
    </item>
    
  </channel>
</rss>
