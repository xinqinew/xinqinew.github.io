<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Hmily云笔记</title>
        <link>https://xinqinew.github.io/</link>
        <description>一个简洁、优雅且高效的博客云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 15 Aug 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://xinqinew.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>C&#43;&#43; 数据类型06</title>
    <link>https://xinqinew.github.io/2021/08/c-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B06/</link>
    <pubDate>Tue, 10 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/c-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B06/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 数据类型 使用编程语言进行编程时，需要用到各种变量来存储各种信息。变量保留的是它所存储的值的内存位置。这意味着，当您创建一个变量时，就会在内]]></description>
</item><item>
    <title>C&#43;&#43;教程01</title>
    <link>https://xinqinew.github.io/2021/08/c-%E6%95%99%E7%A8%8B01/</link>
    <pubDate>Sun, 08 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/c-%E6%95%99%E7%A8%8B01/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 教程 C++ 是一种中级语言，它是由 Bjarne Stroustrup 于 1979 年在贝尔实验室开始设计开发的。C++ 进一步扩充和完善了 C 语言，是一种面向对象的程序设计语言。C++ 可运]]></description>
</item><item>
    <title>C&#43;&#43;简介02</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%AE%80%E4%BB%8B02/</link>
    <pubDate>Sun, 08 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/c-%E7%AE%80%E4%BB%8B02/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 简介 C++ 是一种静态类型的、编译式的、通用的、大小写敏感的、不规则的编程语言，支持过程化编程、面向对象编程和泛型编程。 C++ 被认为是一种中级语言，]]></description>
</item><item>
    <title>C&#43;&#43; 环境设置03</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%8E%AF%E5%A2%83%E8%AE%BE%E7%BD%AE03/</link>
    <pubDate>Sun, 08 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/c-%E7%8E%AF%E5%A2%83%E8%AE%BE%E7%BD%AE03/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 环境设置 本地环境设置 如果您想要设置 C++ 语言环境，您需要确保电脑上有以下两款可用的软件，文本编辑器和 C++ 编译器。 文本编辑器 这将用于输入您的程序。]]></description>
</item><item>
    <title>C&#43;&#43; 基本语法04</title>
    <link>https://xinqinew.github.io/2021/08/c-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%9504/</link>
    <pubDate>Sun, 08 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/c-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%9504/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 基本语法 C++ 程序可以定义为对象的集合，这些对象通过调用彼此的方法进行交互。现在让我们简要地看一下什么是类、对象，方法、即时变量。 对象 - 对象具]]></description>
</item><item>
    <title>C&#43;&#43; 注释05</title>
    <link>https://xinqinew.github.io/2021/08/c-%E6%B3%A8%E9%87%8A05/</link>
    <pubDate>Sun, 08 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/c-%E6%B3%A8%E9%87%8A05/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 注释 程序的注释是解释性语句，您可以在 C++ 代码中包含注释，这将提高源代码的可读性。所有的编程语言都允许某种形式的注释。 C++ 支持单行注释和多行注释]]></description>
</item><item>
    <title>LoveIt 主题</title>
    <link>https://xinqinew.github.io/2021/08/hello-world/</link>
    <pubDate>Sun, 01 Aug 2021 21:57:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/hello-world/</guid>
    <description><![CDATA[<p>LoveIt主题介绍：https://hugoloveit.com/zh-cn/</p>
<p>LoveIt主题仓库：https://github.com/dillonzq/LoveIt</p>]]></description>
</item><item>
    <title>C&#43;&#43;知识点(四) 循环与判断</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E5%9B%9B/</link>
    <pubDate>Sun, 15 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E5%9B%9B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 循环 循环类型 循环类型 描述 while 循环 当给定条件为真时，重复语句或语句组。它会在执行循环主体之前测试条件。 for 循环 多次执行一个语句序列，简化管理循环]]></description>
</item><item>
    <title>为 hugo-theme-even 提供 mermaid 支持.md</title>
    <link>https://xinqinew.github.io/2021/08/%E4%B8%BA-hugo-theme-even-%E6%8F%90%E4%BE%9B-mermaid-%E6%94%AF%E6%8C%81/</link>
    <pubDate>Sat, 14 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/%E4%B8%BA-hugo-theme-even-%E6%8F%90%E4%BE%9B-mermaid-%E6%94%AF%E6%8C%81/</guid>
    <description><![CDATA[俺如何为 hugo-theme-even 提供 mermaid 支持 如上是一个利用 mermaid 绘制的 SVG 图形 ，相比于直接在某些软件绘制好再截图，显然利用 mermaid 绘图具备诸多优点： 网站保存的是带 mermaid 的 markdown 文件，不]]></description>
</item><item>
    <title>C&#43;&#43;知识点(三) 存储类与运算符</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%89/</link>
    <pubDate>Thu, 12 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%89/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 存储类 存储类定义 C++ 程序中变量/函数的范围（可见性）和生命周期。这些说明符放置在它们所修饰的类型之前。下面列出 C++ 程序中可用的存储类： auto register static extern]]></description>
</item></channel>
</rss>
