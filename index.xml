<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Hmily云笔记</title>
        <link>https://xinqinew.github.io/</link>
        <description>一个简洁、优雅且高效的博客云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 19 Aug 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://xinqinew.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>任鸟飞系列</title>
    <link>https://xinqinew.github.io/2021/08/%E4%BB%BB%E9%B8%9F%E9%A3%9E%E7%B3%BB%E5%88%97/</link>
    <pubDate>Thu, 19 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/%E4%BB%BB%E9%B8%9F%E9%A3%9E%E7%B3%BB%E5%88%97/</guid>
    <description><![CDATA[任鸟飞天涯明月刀辅助实战教程 2020飞郁任鸟飞C++之灵魂起源 代号1124-任鸟飞2019之易语言FPS游戏自瞄爆头飞天透视画框 任鸟飞201]]></description>
</item><item>
    <title>C&#43;&#43; 12a自增自减运算符</title>
    <link>https://xinqinew.github.io/2021/08/c-12a%E8%87%AA%E5%A2%9E%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-12a%E8%87%AA%E5%A2%9E%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 自增自减运算符 C++ 运算符 自增运算符 ++ 会把操作数加 1，自减运算符 &ndash; 会把操作数减 1。因此： 1 2 3 4 5 x = x+1; 等同于 x++; 同样的： 1 2 3 4 5 x = x-1; 等同于]]></description>
</item><item>
    <title>C&#43;&#43; 12b杂项运算符</title>
    <link>https://xinqinew.github.io/2021/08/c-12b%E6%9D%82%E9%A1%B9%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-12b%E6%9D%82%E9%A1%B9%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 杂项运算符 C++ 运算符 C++ sizeof 运算符 sizeof 是一个关键字，它是一个编译时运算符，用于判断变量或数据类型的字节大小。 sizeof 运算符可用于获取类、结构、共用体和其]]></description>
</item><item>
    <title>C&#43;&#43; 18字符串</title>
    <link>https://xinqinew.github.io/2021/08/c-18%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-18%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 字符串 C++ 提供了以下两种类型的字符串表示形式： C 风格字符串 C++ 引入的 string 类类型 C 风格字符串 C 风格的字符串起源于 C 语言，并在 C++ 中继续得到支持。字符]]></description>
</item><item>
    <title>C&#43;&#43;知识点(五) 函数与数字</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E4%BA%94/</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E4%BA%94/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 函数 定义函数 C++ 中的函数定义的一般形式如下： 1 2 3 4 return_type function_name( parameter list ) { body of the function } 函数参数 调用类型 描述 传值调用 该方法把参数的实际值赋值给函数的形式参]]></description>
</item><item>
    <title>C&#43;&#43;知识点(六) 数组</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E5%85%AD/</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E5%85%AD/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 数组 概念 描述 多维数组 C++ 支持多维数组。多维数组最简单的形式是二维数组。 指向数组的指针 您可以通过指定不带索引的数组名称来生成一个指向数组中第一]]></description>
</item><item>
    <title>C&#43;&#43; 08变量作用域</title>
    <link>https://xinqinew.github.io/2021/08/c-08%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F/</link>
    <pubDate>Tue, 17 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-08%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 变量作用域 作用域是程序的一个区域，一般来说有三个地方可以定义变量： 在函数或一个代码块内部声明的变量，称为局部变量。 在函数参数的定义中声明的]]></description>
</item><item>
    <title>C&#43;&#43; 11存储类</title>
    <link>https://xinqinew.github.io/2021/08/c-11%E5%AD%98%E5%82%A8%E7%B1%BB/</link>
    <pubDate>Tue, 17 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-11%E5%AD%98%E5%82%A8%E7%B1%BB/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 存储类 存储类定义 C++ 程序中变量/函数的范围（可见性）和生命周期。这些说明符放置在它们所修饰的类型之前。下面列出 C++ 程序中可用的存储类： auto register static extern]]></description>
</item><item>
    <title>C&#43;&#43; 12运算符</title>
    <link>https://xinqinew.github.io/2021/08/c-12%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
    <pubDate>Tue, 17 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-12%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 运算符 运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。C++ 内置了丰富的运算符，并提供了以下类型的运算符： 算术运算符 关系运算符 逻辑运]]></description>
</item><item>
    <title>C&#43;&#43; 13循环</title>
    <link>https://xinqinew.github.io/2021/08/c-13%E5%BE%AA%E7%8E%AF/</link>
    <pubDate>Tue, 17 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-13%E5%BE%AA%E7%8E%AF/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 循环 有的时候，可能需要多次执行同一块代码。一般情况下，语句是顺序执行的：函数中的第一个语句先执行，接着是第二个语句，依此类推。 编程语言提供]]></description>
</item></channel>
</rss>
