<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Hmily云笔记</title>
        <link>https://xinqinew.github.io/</link>
        <description>一个简洁、优雅且高效的博客云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 13 Jan 2022 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://xinqinew.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>多线程</title>
    <link>https://xinqinew.github.io/2022/01/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
    <pubDate>Tue, 11 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>CreateThread 1 m_AcountManageThread = CreateThread(NULL, NULL, ThreadProc, this, 0, NULL);//创建线程 AfxBeginThread (MFC专用) 1 2 //创建线程 大漠的DMInitThread AfxBeginThread(DMInitThread, this, THREAD_PRIORITY_NORMAL, 0, 0, NULL); _beginthreadex 1 m_hThreadHandle = (HANDLE)::_beginthreadex(NULL, 0, ThreadFunction, this, 0, &amp;m_uThreadID); //]]></description>
</item><item>
    <title>C&#43;&#43; static静态成员变量</title>
    <link>https://xinqinew.github.io/2022/01/c-static%E9%9D%99%E6%80%81%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F/</link>
    <pubDate>Sat, 08 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/c-static%E9%9D%99%E6%80%81%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>对象的内存中包含了成员变量，不同的对象占用不同的内存，这使得不同对象的成员变量相互独立，它们的值不受其他对象的影响。例如有两个相同类型的对象]]></description>
</item><item>
    <title>FPS骨骼,u3d,UE4(二)</title>
    <link>https://xinqinew.github.io/2022/01/fps%E9%AA%A8%E9%AA%BCu3due4%E4%BA%8C/</link>
    <pubDate>Sat, 08 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/fps%E9%AA%A8%E9%AA%BCu3due4%E4%BA%8C/</guid>
    <description><![CDATA[我们接着上文继续,如果没有看上文基础的同学建议先看完上文再继续本文章 本文章中均以单机游戏为例,每一种功能仅提供给网络安全工作者反外挂建议和安]]></description>
</item><item>
    <title>CButton</title>
    <link>https://xinqinew.github.io/2022/01/cbutton/</link>
    <pubDate>Fri, 07 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/cbutton/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>CButton 详情 Name 描述 CButton：： GetCheck 抓取按钮控制项的检查状态。 CButton：： GetCheck 抓取选项按钮或核取方块的检查状态。 1 int GetCheck() const; 传回值 值 意义 BST_UNCHECKED 按钮状]]></description>
</item><item>
    <title>CWnd</title>
    <link>https://xinqinew.github.io/2022/01/cwnd/</link>
    <pubDate>Fri, 07 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/cwnd/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>公共方法 说明 CWnd::EnableWindow 启用或禁用鼠标和键盘输入。 CWnd::IsWindowEnabled 确定是否针对鼠标和键盘输入启用窗口。]]></description>
</item><item>
    <title>FPS游戏绘制(一)</title>
    <link>https://xinqinew.github.io/2022/01/fps%E6%B8%B8%E6%88%8F%E7%BB%98%E5%88%B6%E4%B8%80/</link>
    <pubDate>Fri, 07 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/fps%E6%B8%B8%E6%88%8F%E7%BB%98%E5%88%B6%E4%B8%80/</guid>
    <description><![CDATA[FPS类型游戏的设计研究和游戏安全,反外挂研究 学习这套课程的基础包含少量的汇编知识和编程知识, 一定的数学知识和内存知识 基础建立在 任鸟飞202]]></description>
</item><item>
    <title>CString指南</title>
    <link>https://xinqinew.github.io/2022/01/cstring%E6%8C%87%E5%8D%97/</link>
    <pubDate>Mon, 03 Jan 2022 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2022/01/cstring%E6%8C%87%E5%8D%97/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>我用#CSDN#这个app发现了有技术含量的博客，小伙伴们求同去《CString 应用操作指南【转】》, 一起来围观吧 https://blog.csdn.net/wallwind/article/details/6599125?utm_source=app&app_version=4.21.1 这篇文章包括以下内容： CString]]></description>
</item><item>
    <title>D3D黑屏优化</title>
    <link>https://xinqinew.github.io/2021/12/d3d%E9%BB%91%E5%B1%8F%E4%BC%98%E5%8C%96/</link>
    <pubDate>Wed, 29 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/d3d%E9%BB%91%E5%B1%8F%E4%BC%98%E5%8C%96/</guid>
    <description><![CDATA[项目中常用的D3D黑屏优化讲解和源码分享,DX系列的游戏都可以用 诸多工作室在项目测试功能稳定后，为了更高效率的 榨干电脑性能 尽可能的多开会选择]]></description>
</item><item>
    <title>【飞郁2022新课程】32 - xdbg的认识与设置</title>
    <link>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B32-xdbg%E7%9A%84%E8%AE%A4%E8%AF%86%E4%B8%8E%E8%AE%BE%E7%BD%AE/</link>
    <pubDate>Fri, 24 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B32-xdbg%E7%9A%84%E8%AE%A4%E8%AF%86%E4%B8%8E%E8%AE%BE%E7%BD%AE/</guid>
    <description><![CDATA[xdbg的简介 Xllydbg(简称xdbg)和OD的用法和界面都是很像的,由于网络安全的发展,OD无法满足大部分人的需要了,更多的人习惯对x]]></description>
</item><item>
    <title>【飞郁2022新课程】31 - OD更多技巧</title>
    <link>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B31-od%E6%9B%B4%E5%A4%9A%E6%8A%80%E5%B7%A7/</link>
    <pubDate>Thu, 23 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B31-od%E6%9B%B4%E5%A4%9A%E6%8A%80%E5%B7%A7/</guid>
    <description><![CDATA[上一节课,给大家介绍OD的一些基本的使用方法,当然OD不仅仅只有这些功能和指令,这节课咱们就来更深入的了解一下OD 对命令行插件进行操作 首先我]]></description>
</item></channel>
</rss>
