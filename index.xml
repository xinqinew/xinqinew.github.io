<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Hmily云笔记</title>
        <link>https://xinqinew.github.io/</link>
        <description>一个简洁、优雅且高效的博客云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://xinqinew.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>C&#43;&#43;知识点(七) 指针与引用</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%83/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-%E7%9F%A5%E8%AF%86%E7%82%B9%E4%B8%83/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 指针]]></description>
</item><item>
    <title>C&#43;&#43; 19指针</title>
    <link>https://xinqinew.github.io/2021/08/c-19%E6%8C%87%E9%92%88/</link>
    <pubDate>Fri, 20 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-19%E6%8C%87%E9%92%88/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 指针 学习 C++ 的指针既简单又有趣。通过指针，可以简化一些 C++ 编程任务的执行，还有一些任务，如动态内存分配，没有指针是无法执行的。所以，想要成为一]]></description>
</item><item>
    <title>C&#43;&#43; 20引用</title>
    <link>https://xinqinew.github.io/2021/08/c-20%E5%BC%95%E7%94%A8/</link>
    <pubDate>Fri, 20 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-20%E5%BC%95%E7%94%A8/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 引用 引用变量是一个别名，也就是说，它是某个已存在变量的另一个名字。一旦把引用初始化为某个变量，就可以使用该引用名称或变量名称来指向变量。 C++]]></description>
</item><item>
    <title>C&#43;&#43; 21日期 &amp; 时间</title>
    <link>https://xinqinew.github.io/2021/08/c-21%E6%97%A5%E6%9C%9F-%E6%97%B6%E9%97%B4/</link>
    <pubDate>Fri, 20 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-21%E6%97%A5%E6%9C%9F-%E6%97%B6%E9%97%B4/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 日期 &amp; 时间 C++ 标准库没有提供所谓的日期类型。C++ 继承了 C 语言用于日期和时间操作的结构和函数。为了使用日期和时间相关的函数和结构，需要在 C++ 程]]></description>
</item><item>
    <title>C&#43;&#43; 22基本的输入输出</title>
    <link>https://xinqinew.github.io/2021/08/c-22%E5%9F%BA%E6%9C%AC%E7%9A%84%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</link>
    <pubDate>Fri, 20 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-22%E5%9F%BA%E6%9C%AC%E7%9A%84%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 基本的输入输出 C++ 标准库提供了一组丰富的输入/输出功能，我们将在后续的章节进行介绍。本章将讨论 C++ 编程中最基本和最常见的 I/O 操作。 C++ 的 I/O 发生在流]]></description>
</item><item>
    <title>C&#43;&#43; 23数据结构</title>
    <link>https://xinqinew.github.io/2021/08/c-23%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <pubDate>Fri, 20 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-23%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 数据结构 C/C++ 数组允许定义可存储相同类型数据项的变量，但是结构是 C++ 中另一种用户自定义的可用的数据类型，它允许您存储不同类型的数据项。 结构用于表]]></description>
</item><item>
    <title>任鸟飞系列</title>
    <link>https://xinqinew.github.io/2021/08/%E4%BB%BB%E9%B8%9F%E9%A3%9E%E7%B3%BB%E5%88%97/</link>
    <pubDate>Thu, 19 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/%E4%BB%BB%E9%B8%9F%E9%A3%9E%E7%B3%BB%E5%88%97/</guid>
    <description><![CDATA[任鸟飞天涯明月刀辅助实战教程 2020飞郁任鸟飞C++之灵魂起源 代号1124-任鸟飞2019之易语言FPS游戏自瞄爆头飞天透视画框 任鸟飞201]]></description>
</item><item>
    <title>C&#43;&#43; 12a自增自减运算符</title>
    <link>https://xinqinew.github.io/2021/08/c-12a%E8%87%AA%E5%A2%9E%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-12a%E8%87%AA%E5%A2%9E%E8%87%AA%E5%87%8F%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 自增自减运算符 C++ 运算符 自增运算符 ++ 会把操作数加 1，自减运算符 &ndash; 会把操作数减 1。因此： 1 2 3 4 5 x = x+1; 等同于 x++; 同样的： 1 2 3 4 5 x = x-1; 等同于]]></description>
</item><item>
    <title>C&#43;&#43; 12b杂项运算符</title>
    <link>https://xinqinew.github.io/2021/08/c-12b%E6%9D%82%E9%A1%B9%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-12b%E6%9D%82%E9%A1%B9%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 杂项运算符 C++ 运算符 C++ sizeof 运算符 sizeof 是一个关键字，它是一个编译时运算符，用于判断变量或数据类型的字节大小。 sizeof 运算符可用于获取类、结构、共用体和其]]></description>
</item><item>
    <title>C&#43;&#43; 18字符串</title>
    <link>https://xinqinew.github.io/2021/08/c-18%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Wed, 18 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-18%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 字符串 C++ 提供了以下两种类型的字符串表示形式： C 风格字符串 C++ 引入的 string 类类型 C 风格字符串 C 风格的字符串起源于 C 语言，并在 C++ 中继续得到支持。字符]]></description>
</item></channel>
</rss>
