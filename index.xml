<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Hmily云笔记</title>
        <link>https://xinqinew.github.io/</link>
        <description>一个简洁、优雅且高效的博客云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 13 Oct 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://xinqinew.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>64位内存与通用寄存器</title>
    <link>https://xinqinew.github.io/2021/10/64%E4%BD%8D%E5%86%85%E5%AD%98%E4%B8%8E%E9%80%9A%E7%94%A8%E5%AF%84%E5%AD%98%E5%99%A8/</link>
    <pubDate>Wed, 13 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/64%E4%BD%8D%E5%86%85%E5%AD%98%E4%B8%8E%E9%80%9A%E7%94%A8%E5%AF%84%E5%AD%98%E5%99%A8/</guid>
    <description><![CDATA[随着游戏行业的发展，x32位的程序已经很难满足一些新兴游戏的需求了，因为32位内存的最大值为0xFFFFFFFF，这个值看似足够，但是当游戏]]></description>
</item><item>
    <title>x86 和 x64 共用HOOK类</title>
    <link>https://xinqinew.github.io/2021/10/x86-%E5%92%8C-x64-%E5%85%B1%E7%94%A8hook%E7%B1%BB/</link>
    <pubDate>Wed, 13 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/x86-%E5%92%8C-x64-%E5%85%B1%E7%94%A8hook%E7%B1%BB/</guid>
    <description><![CDATA[InHook.h 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #pragma once #ifdef _WIN64 typedef unsigned __int64 SELF_PTR; #else typedef unsigned int SELF_PTR; #endif #if _WIN64 constexpr int byte_length = 9; #else constexpr int byte_length = 5; #endif // 0 class InHook { public: void Initalize(SELF_PTR oldAddr,]]></description>
</item><item>
    <title>《冒险岛》技能分析之技能库</title>
    <link>https://xinqinew.github.io/2021/10/%E5%86%92%E9%99%A9%E5%B2%9B%E6%8A%80%E8%83%BD%E5%88%86%E6%9E%90%E4%B9%8B%E6%8A%80%E8%83%BD%E5%BA%93/</link>
    <pubDate>Wed, 13 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/%E5%86%92%E9%99%A9%E5%B2%9B%E6%8A%80%E8%83%BD%E5%88%86%E6%9E%90%E4%B9%8B%E6%8A%80%E8%83%BD%E5%BA%93/</guid>
    <description><![CDATA[上一篇帖子中我们对技能等级进行了分析，接下来我们对技能名字库进行分析，进而获得完整的技能遍历。既然分析名字库，自然要从名字入手了，我们任意选]]></description>
</item><item>
    <title>【冒险岛】技能等级遍历分析</title>
    <link>https://xinqinew.github.io/2021/10/%E5%86%92%E9%99%A9%E5%B2%9B%E6%8A%80%E8%83%BD%E7%AD%89%E7%BA%A7%E9%81%8D%E5%8E%86%E5%88%86%E6%9E%90/</link>
    <pubDate>Wed, 13 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/%E5%86%92%E9%99%A9%E5%B2%9B%E6%8A%80%E8%83%BD%E7%AD%89%E7%BA%A7%E9%81%8D%E5%8E%86%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[随着游戏代码的发展，新游戏的技能越来越华丽，分类也越来越多，数据结构用的五花八门。而老游戏也不甘寂寞，技能数据也处理的有模有样，分析起来也颇]]></description>
</item><item>
    <title>【幻想神域】人物属性分析</title>
    <link>https://xinqinew.github.io/2021/10/%E5%B9%BB%E6%83%B3%E7%A5%9E%E5%9F%9F%E4%BA%BA%E7%89%A9%E5%B1%9E%E6%80%A7%E5%88%86%E6%9E%90/</link>
    <pubDate>Wed, 13 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/%E5%B9%BB%E6%83%B3%E7%A5%9E%E5%9F%9F%E4%BA%BA%E7%89%A9%E5%B1%9E%E6%80%A7%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[首先对角色名字进行搜索，得到3个结果，分别改变3个结果后，切换角色栏，发现角色名字变为了第三个地址的名字**（如图）** 通过OD对这个地址下]]></description>
</item><item>
    <title>技能点数结构（冒险岛技能分析）</title>
    <link>https://xinqinew.github.io/2021/10/%E6%8A%80%E8%83%BD%E7%82%B9%E6%95%B0%E7%BB%93%E6%9E%84%E5%86%92%E9%99%A9%E5%B2%9B%E6%8A%80%E8%83%BD%E5%88%86%E6%9E%90/</link>
    <pubDate>Wed, 13 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/%E6%8A%80%E8%83%BD%E7%82%B9%E6%95%B0%E7%BB%93%E6%9E%84%E5%86%92%E9%99%A9%E5%B2%9B%E6%8A%80%E8%83%BD%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[随着游戏代码的发展，新游戏的技能越来越华丽，分类也越来越多，数据结构用的五花八门。而老游戏也不甘寂寞，技能数据也处理的有模有样，分析起来也颇]]></description>
</item><item>
    <title>x64&lt;传奇永恒&gt;之释放技能CALL</title>
    <link>https://xinqinew.github.io/2021/10/x64%E4%BC%A0%E5%A5%87%E6%B0%B8%E6%81%92%E4%B9%8B%E9%87%8A%E6%94%BE%E6%8A%80%E8%83%BDcall/</link>
    <pubDate>Tue, 12 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/x64%E4%BC%A0%E5%A5%87%E6%B0%B8%E6%81%92%E4%B9%8B%E9%87%8A%E6%94%BE%E6%8A%80%E8%83%BDcall/</guid>
    <description><![CDATA[今天我们来分析一下&lt;传奇永恒&gt;的释放技能CALL, 调用技能CALL可以实现全自动循环打怪功能. 首先, 定位到明文包头部 在明文包头部]]></description>
</item><item>
    <title>跳出线程发包的几种方式（韩服剑灵2）</title>
    <link>https://xinqinew.github.io/2021/10/%E8%B7%B3%E5%87%BA%E7%BA%BF%E7%A8%8B%E5%8F%91%E5%8C%85%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%E9%9F%A9%E6%9C%8D%E5%89%91%E7%81%B52/</link>
    <pubDate>Tue, 12 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/%E8%B7%B3%E5%87%BA%E7%BA%BF%E7%A8%8B%E5%8F%91%E5%8C%85%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%E9%9F%A9%E6%9C%8D%E5%89%91%E7%81%B52/</guid>
    <description><![CDATA[明文发包CALL是分析一款游戏功能的主要突破口，但是很多游戏都是线程发包，需要跳出线程才能得到明文CALL的位置。以往的条线程方式都是在包内]]></description>
</item><item>
    <title>ASCII码对照表</title>
    <link>https://xinqinew.github.io/2021/10/ascii%E7%A0%81%E5%AF%B9%E7%85%A7%E8%A1%A8/</link>
    <pubDate>Thu, 07 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/ascii%E7%A0%81%E5%AF%B9%E7%85%A7%E8%A1%A8/</guid>
    <description><![CDATA[ASCII控制字符 二进制 十进制 十六进制 缩写 名称/意义 0000 0000 0 00 NUL 空字符（Null） 0000 0001 1 01 SOH 标题开始 0000 0010 2 02 STX 本文开始 0000 0011 3 03 ETX 本文结束 0000 0100 4]]></description>
</item><item>
    <title>OD常识及技巧</title>
    <link>https://xinqinew.github.io/2021/10/od%E5%B8%B8%E8%AF%86%E5%8F%8A%E6%8A%80%E5%B7%A7/</link>
    <pubDate>Sun, 03 Oct 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/10/od%E5%B8%B8%E8%AF%86%E5%8F%8A%E6%8A%80%E5%B7%A7/</guid>
    <description><![CDATA[菜单栏 E 模块 T 线程（挂起与激活）resume恢复线程 B 执行断点 HBP 硬件断点 OD指令 dd 查看dword db 查看字节集 hw 硬件写入断点 hr 硬件访问断点 快捷]]></description>
</item></channel>
</rss>
