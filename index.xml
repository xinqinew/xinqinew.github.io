<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Hmily云笔记</title>
        <link>https://xinqinew.github.io/</link>
        <description>一个简洁、优雅且高效的博客云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 14 Dec 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://xinqinew.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>【飞郁2022新课程】20 - 局部变量和全局变量</title>
    <link>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B20-%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%92%8C%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/</link>
    <pubDate>Wed, 08 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B20-%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%92%8C%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/</guid>
    <description><![CDATA[[在前面的课中 我们讲了常量和变量 这里我们讲下变量的作用域 和 局部变量 全局变量 全局静态变量 局部静态变量 在讲到这些之前 还需要了解下程序的内存分配问]]></description>
</item><item>
    <title>Hook</title>
    <link>https://xinqinew.github.io/2021/12/hook/</link>
    <pubDate>Mon, 06 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/hook/</guid>
    <description><![CDATA[常用hook方式 JMP指令型hook RET指令型hook Detours库hook JMP与CALL 公式 目标地址 = 当前指令地址 +指令长度 + 偏移量]]></description>
</item><item>
    <title>MFC控件</title>
    <link>https://xinqinew.github.io/2021/12/mfc%E6%8E%A7%E4%BB%B6/</link>
    <pubDate>Sun, 05 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/mfc%E6%8E%A7%E4%BB%B6/</guid>
    <description><![CDATA[GetDlgItem 获取控件对象 根据继承关系，有如下几类： 1 2 3 4 5 6 7 CWindow::GetDlgItem HWND GetDlgItem( intnID)const; /* 说明—— 参数 nID：接收消息的控件的标识； 返回值：标识所标记的控制窗口句柄 */]]></description>
</item><item>
    <title>【飞郁2022新课程】19 - 操作符运算符</title>
    <link>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B19-%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
    <pubDate>Sat, 04 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B19-%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
    <description><![CDATA[学生：上节课骷髅老师搜索数据搜索太快了，我还没看清楚呢，他就扫完了，拦都拦不住他啊！ 老师：我都拦不住他呀，他是早产儿。 学生：这和早产儿有啥关]]></description>
</item><item>
    <title>【飞郁2022新课程】18 - CE基础和扫描</title>
    <link>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B18-ce%E5%9F%BA%E7%A1%80%E5%92%8C%E6%89%AB%E6%8F%8F/</link>
    <pubDate>Fri, 03 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B18-ce%E5%9F%BA%E7%A1%80%E5%92%8C%E6%89%AB%E6%8F%8F/</guid>
    <description><![CDATA[1.打开CE Cheat Engine是网络安全数据分析的一款很重要的工具,我们可以在官网下载他的最新版本https://www.cheatengine]]></description>
</item><item>
    <title>【飞郁2022新课程】17 - 操作符运算符</title>
    <link>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B17-%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
    <pubDate>Wed, 01 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B17-%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
    <description><![CDATA[不知道有没有同学发现之前几节都是在讲关于数据 那么有的同学会问 计算机是怎么处理操作运算这些数据的呢？ 好的 这节课就讲解C语言运算符 一、运算符 1.]]></description>
</item><item>
    <title>飞郁2019课程目录</title>
    <link>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812019%E8%AF%BE%E7%A8%8B%E7%9B%AE%E5%BD%95/</link>
    <pubDate>Wed, 01 Dec 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/12/%E9%A3%9E%E9%83%812019%E8%AF%BE%E7%A8%8B%E7%9B%AE%E5%BD%95/</guid>
    <description><![CDATA[骷髅 跨进程读写内存 2019年10月18日——跨进程读写内存 2019年10月21日——窗口相关的API，字符集，常用类型 2019年11月4日—]]></description>
</item><item>
    <title>【飞郁2022新课程】16 - 数组和字符串</title>
    <link>https://xinqinew.github.io/2021/11/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B16-%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Mon, 29 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/11/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B16-%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[前面讲到了数据类型讲到过字符数组 有的同学对 数组 还不太理解 那么今天我们讲解的是 数组 和 字符串以及一些编码 好了 开始我们的讲解 一、数组 首先我们讲解数]]></description>
</item><item>
    <title>【飞郁2022新课程】15 - 强制转换类型</title>
    <link>https://xinqinew.github.io/2021/11/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B15-%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2%E7%B1%BB%E5%9E%8B/</link>
    <pubDate>Fri, 26 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/11/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B15-%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2%E7%B1%BB%E5%9E%8B/</guid>
    <description><![CDATA[一、强制转换类型 1.从名字上来理解关键在于类型转换中“转换“二字的理解 2.想必大家也能理解 其实就是 一种类型转换为另一种类型 3.类型转换分为:]]></description>
</item><item>
    <title>【飞郁2022新课程】14 - 有符号和无符号区别</title>
    <link>https://xinqinew.github.io/2021/11/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B14-%E6%9C%89%E7%AC%A6%E5%8F%B7%E5%92%8C%E6%97%A0%E7%AC%A6%E5%8F%B7%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Wed, 24 Nov 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/11/%E9%A3%9E%E9%83%812022%E6%96%B0%E8%AF%BE%E7%A8%8B14-%E6%9C%89%E7%AC%A6%E5%8F%B7%E5%92%8C%E6%97%A0%E7%AC%A6%E5%8F%B7%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[一、原码 反码 补码 从不同的角度去看情况,往往会得到不同的结果,在前面的课程我们举得例子都是正数,没有看到负数,难道计算机没有负数一说？当然不是]]></description>
</item></channel>
</rss>
