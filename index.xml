<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Hmily云笔记</title>
        <link>https://xinqinew.github.io/</link>
        <description>一个简洁、优雅且高效的博客云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 30 Sep 2021 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://xinqinew.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>飞郁逆向课程详解</title>
    <link>https://xinqinew.github.io/2021/09/%E9%A3%9E%E9%83%81%E9%80%86%E5%90%91%E8%AF%BE%E7%A8%8B%E8%AF%A6%E8%A7%A3/</link>
    <pubDate>Thu, 30 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/%E9%A3%9E%E9%83%81%E9%80%86%E5%90%91%E8%AF%BE%E7%A8%8B%E8%AF%A6%E8%A7%A3/</guid>
    <description><![CDATA[购普通课程或者核心课程，为保您购买与售后无忧，先咨询飞郁客服QQ:290330101，并享受不定额度优惠！ 逆向基本工具包 链接：https:/]]></description>
</item><item>
    <title>内存中的浮点数与CE扫四种编码</title>
    <link>https://xinqinew.github.io/2021/09/%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E6%B5%AE%E7%82%B9%E6%95%B0%E4%B8%8Ece%E6%89%AB%E5%9B%9B%E7%A7%8D%E7%BC%96%E7%A0%81/</link>
    <pubDate>Mon, 27 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84%E6%B5%AE%E7%82%B9%E6%95%B0%E4%B8%8Ece%E6%89%AB%E5%9B%9B%E7%A7%8D%E7%BC%96%E7%A0%81/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>内存中的浮点数 3开头 1.xxxx 0.xxxx 4开头 100.xxxx b开头 -0.xxxx c开头 -15.xxxx CE扫四种编码 ASCI UNIDCOE（不勾选） UNIDCOE UNIDCOE 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 graph 勾选UNIDC]]></description>
</item><item>
    <title>C&#43;&#43; 笔记40STL 教程</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B040stl-%E6%95%99%E7%A8%8B/</link>
    <pubDate>Sun, 26 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B040stl-%E6%95%99%E7%A8%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ STL 教程 在前面的章节中，我们已经学习了 C++ 模板的概念。C++ STL（标准模板库）是一套功能强大的 C++ 模板类，提供了通用的模板类和函数，这些模板类]]></description>
</item><item>
    <title>C&#43;&#43; 笔记41标准库</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B041%E6%A0%87%E5%87%86%E5%BA%93/</link>
    <pubDate>Sun, 26 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B041%E6%A0%87%E5%87%86%E5%BA%93/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 标准库 C++ 标准库可以分为两部分： 标准函数库： 这个库是由通用的、独立的、不属于任何类的函数组成的。函数库继承自 C 语言。 面向对象类库： 这个库是类]]></description>
</item><item>
    <title>在线班课程目录（6788）</title>
    <link>https://xinqinew.github.io/2021/09/%E5%9C%A8%E7%BA%BF%E7%8F%AD%E8%AF%BE%E7%A8%8B%E7%9B%AE%E5%BD%956788/</link>
    <pubDate>Sat, 25 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/%E5%9C%A8%E7%BA%BF%E7%8F%AD%E8%AF%BE%E7%A8%8B%E7%9B%AE%E5%BD%956788/</guid>
    <description><![CDATA[报名QQ: 3534373359 ================================ 本期在线班, 实战游戏列表: 口袋西游 传奇永恒 幻想神域单机版 猎天 QQ自由幻想 天涯明月刀 魔兽单机版 神途 QQ三国 新寻仙 魔兽怀旧服 自由足]]></description>
</item><item>
    <title>C&#43;&#43; 笔记36预处理器</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B036%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8/</link>
    <pubDate>Thu, 23 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B036%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 预处理器 C++ 还支持很多预处理指令，比如 #include、#define、#if、#else、#line 等，让我们一起看看这些重要指令。 #define 预处]]></description>
</item><item>
    <title>C&#43;&#43; 笔记37信号处理</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B037%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/</link>
    <pubDate>Thu, 23 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B037%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 信号处理 信号是由操作系统传给进程的中断，会提早终止一个程序。在 UNIX、LINUX、Mac OS X 或 Windows 系统上，可以通过按 Ctrl+C 产生中断。 有些信号不]]></description>
</item><item>
    <title>C&#43;&#43; 笔记38多线程</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B038%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
    <pubDate>Thu, 23 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B038%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 多线程 多线程是多任务处理的一种特殊形式，多任务处理允许让电脑同时运行两个或两个以上的程序。一般情况下，两种类型的多任务处理：基于进程和基于]]></description>
</item><item>
    <title>C&#43;&#43; 笔记39Web 编程</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B039web-%E7%BC%96%E7%A8%8B/</link>
    <pubDate>Thu, 23 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B039web-%E7%BC%96%E7%A8%8B/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ Web 编程 什么是 CGI？ 公共网关接口（CGI），是一套标准，定义了信息是如何在 Web 服务器和客户端脚本之间进行交换的。 CGI 规范目前是由 NCSA 维护的，NC]]></description>
</item><item>
    <title>C&#43;&#43; 笔记33动态内存</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B033%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98/</link>
    <pubDate>Mon, 20 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B033%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 动态内存 C++ 程序中的内存分为两个部分： **栈：**在函数内部声明的所有变量都将占用栈内存。 **堆：**这是程序中未使用的内存，在程序运行时可]]></description>
</item></channel>
</rss>
