<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>辅助 on Hmily云笔记</title>
    <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/</link>
    <description>Recent content in 辅助 on Hmily云笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>xinqinew@163.com (辛琪)</managingEditor>
    <webMaster>xinqinew@163.com (辛琪)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 03 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;逆向</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E5%A4%9C%E9%A3%8E_%E6%9D%A5%E8%A2%AD-c&#43;&#43;%E9%80%86%E5%90%91/</link>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E5%A4%9C%E9%A3%8E_%E6%9D%A5%E8%A2%AD-c&#43;&#43;%E9%80%86%E5%90%91/</guid>
      <description>一. 人物基址及相关属性偏移 CE搜索数值,如血量 OD追基址 龙龙遍历其它偏移 二. 查找人物状态基址及偏移 CE搜索人物状态 OD追基址 三. 人物怪物二叉</description>
    </item>
    
    <item>
      <title>整理</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E6%95%B4%E7%90%86/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E6%95%B4%E7%90%86/</guid>
      <description>整体流程 1 2 3 4 5 6 7 8 9 10 11 12 13 14 graph subgraph 整体流程 找出发包函数--&amp;gt; 判断是否线程发包 --&amp;gt; |否|找出加密封包 判断是否线程发包--&amp;gt; |是</description>
    </item>
    
    <item>
      <title>ASCII码对照表</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/ascii%E7%A0%81%E5%AF%B9%E7%85%A7%E8%A1%A8/</link>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/ascii%E7%A0%81%E5%AF%B9%E7%85%A7%E8%A1%A8/</guid>
      <description>ASCII控制字符 二进制 十进制 十六进制 缩写 名称/意义 0000 0000 0 00 NUL 空字符（Null） 0000 0001 1 01 SOH 标题开始 0000 0010 2 02 STX 本文开始 0000 0011 3 03 ETX 本文结束 0000 0100 4</description>
    </item>
    
    <item>
      <title>OD常识及技巧</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/od%E5%B8%B8%E8%AF%86%E5%8F%8A%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/od%E5%B8%B8%E8%AF%86%E5%8F%8A%E6%8A%80%E5%B7%A7/</guid>
      <description>菜单栏 E 模块 T 线程（挂起与激活）resume恢复线程 B 执行断点 HBP 硬件断点 OD指令 dd 查看dword db 查看字节集 hw 硬件写入断点 hr 硬件访问断点 快捷</description>
    </item>
    
    <item>
      <title>用MFC写注入器</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E7%94%A8mfc%E5%86%99%E6%B3%A8%E5%85%A5%E5%99%A8/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E7%94%A8mfc%E5%86%99%E6%B3%A8%E5%85%A5%E5%99%A8/</guid>
      <description>步骤: 新建MFC项目(用于注入DLL) 新建win32项目 dll 导出符号 安全开发生命周期</description>
    </item>
    
    <item>
      <title>指针扫描</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E6%8C%87%E9%92%88%E6%89%AB%E6%8F%8F/</link>
      <pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E6%8C%87%E9%92%88%E6%89%AB%E6%8F%8F/</guid>
      <description>0x00 Target 【基地址】+【偏移】+【偏移】+&amp;hellip;=【偏移地址】 【Target】是【Winform】窗体； 【Winform】标题是【For</description>
    </item>
    
    <item>
      <title>动态链接库DLL</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93dll/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93dll/</guid>
      <description>DLL动态链接库及入口函数 LoadLibrary 加载动态链接库 1 2 3 4 5 6 7 8 9 10 11 12 13 HMODULE LoadLibraryW( [in] LPCWSTR lpLibFileName //模块名称 ); HMODULE LoadLibraryA( [in] LPCSTR lpLibFileName //模块名称 ); //模块名称可以是库模块</description>
    </item>
    
    <item>
      <title>跨进程</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E8%B7%A8%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E8%B7%A8%E8%BF%9B%E7%A8%8B/</guid>
      <description>跨进程分配内存 概览 malloc 在本进程分配内存(堆栈) VirtualAlloc 可在当前进程分配内存 VirtualFree 释放内存 VirtualAllocEx 可在当前进程或者目标进程分配内存 VirtualFreeEx 释放内存 VirtualAlloc 1 2 3 4 5 6 LPVOID VirtualAlloc( [in,</description>
    </item>
    
    <item>
      <title>64位Call的参数</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/64%E4%BD%8Dcall%E7%9A%84%E5%8F%82%E6%95%B0/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/64%E4%BD%8Dcall%E7%9A%84%E5%8F%82%E6%95%B0/</guid>
      <description>64位Call的参数 call上层 参数1 rcx ecx cx 参数2 rdx edx dx 参数3 r8 r8d 参数4 r9 r9d 参数5 rsp+20+8_0 参数5 rsp+20+8_1 call内 参数1 rcx ecx cx 参数2 rdx edx dx 参数3 r8 r8d 参数</description>
    </item>
    
    <item>
      <title>WOW部分功能代码</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/wow%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E4%BB%A3%E7%A0%81/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/wow%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E4%BB%A3%E7%A0%81/</guid>
      <description>WOW部分功能代码 获取角色名字 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // pcall5(对象地址,0,1,0,0);//返回名字地址 void CPAGE1::OnBnClickedButton() { // TODO: 在此添</description>
    </item>
    
    <item>
      <title>多字节字符串 转UTF-8字符串</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E5%A4%9A%E5%AD%97%E8%8A%82%E5%AD%97%E7%AC%A6%E4%B8%B2-%E8%BD%ACutf-8%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E5%A4%9A%E5%AD%97%E8%8A%82%E5%AD%97%E7%AC%A6%E4%B8%B2-%E8%BD%ACutf-8%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>多字节字符串 转UTF-8字符串 让喊话内容支持中文 1 2 3 4 5 6 7 8 9 10 //AnsiToUtf8.h #pragma once //字节集 转16进制 DWORD BytesToHexStr(IN BYTE*nbData, DWORD nbDataSize,OUT char*szpHexBuf); //ANSI 转 UTF8 DWORD AnsiToUtf8(LPCSTR Ansi,OUT LPSTR szpUtf8Buf); //unicode 转 ascii char* UniCodeToAscii(IN WCHAR*szpUnicodeStr,OUT char*szpAsciiStr); //Uft-8 转</description>
    </item>
    
    <item>
      <title>句柄 进程 模块 读写</title>
      <link>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E5%8F%A5%E6%9F%84-%E8%BF%9B%E7%A8%8B-%E6%A8%A1%E5%9D%97-%E8%AF%BB%E5%86%99/</link>
      <pubDate>Fri, 23 Jul 2021 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/%E8%BE%85%E5%8A%A9/%E5%8F%A5%E6%9F%84-%E8%BF%9B%E7%A8%8B-%E6%A8%A1%E5%9D%97-%E8%AF%BB%E5%86%99/</guid>
      <description>句柄 进程 内存 窗口句柄 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 HWND FindWindow( LPCTSTR IpClassName， //窗口的类名 LPCTSTR IpWindowName //</description>
    </item>
    
  </channel>
</rss>
