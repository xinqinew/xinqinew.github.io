<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Socket on Hmily云笔记</title>
    <link>https://xinqinew.github.io/en/posts/socket/</link>
    <description>Recent content in Socket on Hmily云笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>xinqinew@163.com (辛琪)</managingEditor>
    <webMaster>xinqinew@163.com (辛琪)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 28 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xinqinew.github.io/en/posts/socket/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;</title>
      <link>https://xinqinew.github.io/en/posts/socket/c&#43;&#43;-socket%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/c&#43;&#43;-socket%E7%AC%94%E8%AE%B0/</guid>
      <description>socket编程演示 socket() 创建套接字 通过 socket() 函数创建了一个套接字，参数 AF_INET 表示使用 IPv4 地址，SOCK_STREAM 表示使用面向连接的数据传输方式，IP</description>
    </item>
    
    <item>
      <title>C&#43;&#43; select分析1</title>
      <link>https://xinqinew.github.io/en/posts/socket/c&#43;&#43;-select%E5%88%86%E6%9E%901/</link>
      <pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/c&#43;&#43;-select%E5%88%86%E6%9E%901/</guid>
      <description>目录 服务端升级为select模型 Socket的select模型 客户端转为Select模型 服务端升级为select模型 Socket的selec</description>
    </item>
    
    <item>
      <title>C&#43;&#43;实现socket通信(TCP IP)</title>
      <link>https://xinqinew.github.io/en/posts/socket/c&#43;&#43;-socket%E7%94%A8%E6%B3%951/</link>
      <pubDate>Sat, 08 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/c&#43;&#43;-socket%E7%94%A8%E6%B3%951/</guid>
      <description>C++:实现socket通信（TCP/IP）实例 ​ 首先声明，博主之前从来没有写过通信方面的东西，这次之所以写这个是因为项目需要，因此本文主要</description>
    </item>
    
    <item>
      <title>C&#43;&#43; select分析2</title>
      <link>https://xinqinew.github.io/en/posts/socket/c&#43;&#43;-select%E5%88%86%E6%9E%902/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/c&#43;&#43;-select%E5%88%86%E6%9E%902/</guid>
      <description>网上一篇博主写的select，十分透彻，参考linux下多路复用模型之Select模型 本文主要记录了select一些用法和自己写的一个用se</description>
    </item>
    
    <item>
      <title>Lua Socket in Win</title>
      <link>https://xinqinew.github.io/en/posts/socket/lua-socket-in-win/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/lua-socket-in-win/</guid>
      <description>Lua Socket在Windows平台下的使用 在上一篇博文中介绍了VS2015+Lua5.1.5环境的搭建，最后介绍了Lua解释器的创建。本文将</description>
    </item>
    
    <item>
      <title>Lua Socket with VSCode in Win10</title>
      <link>https://xinqinew.github.io/en/posts/socket/lua-socket-with-vscode-in-win10/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/lua-socket-with-vscode-in-win10/</guid>
      <description>使用Lua 在VsCode 环境下 开发 需要使用到 Socket 、Http、Udp、Tcp 开发 都可以使用 C库 LuaSocket 先下载VSCode 插件以及 Lua 的Windows 运行</description>
    </item>
    
    <item>
      <title>Lua Socket笔记</title>
      <link>https://xinqinew.github.io/en/posts/socket/lua-socket%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/lua-socket%E7%AC%94%E8%AE%B0/</guid>
      <description>完整说明，见引用 https://lunarmodules.github.io/luasocket/reference.html select用法 等待多个套接字更改状态 1 socket.select(recvt, sendt [, timeout]) 参数： Recvt是一个带有套接字的数组，用于测试可供读取(接收)的字符 se</description>
    </item>
    
    <item>
      <title>Lua Socket分析1</title>
      <link>https://xinqinew.github.io/en/posts/socket/lua-socket%E5%88%86%E6%9E%901/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/lua-socket%E5%88%86%E6%9E%901/</guid>
      <description>LuaSocket 是 Lua 的网络模块库，它可以很方便地提供 TCP、UDP、DNS、FTP、HTTP、SMTP、MIME 等多种网络协议的访问操作。 它由两部分组成：</description>
    </item>
    
    <item>
      <title>Lua Socket分析2</title>
      <link>https://xinqinew.github.io/en/posts/socket/lua-socket%E5%88%86%E6%9E%902/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/lua-socket%E5%88%86%E6%9E%902/</guid>
      <description>实例解析lua中的socket（TCP，UDP） 首先，安装lua下的socket库。我在ubuntu下安装测试的。安装完成后会有 /usr/local/lib/lua/5.1/socket/core.so 直接上例子</description>
    </item>
    
    <item>
      <title>Mac Socket</title>
      <link>https://xinqinew.github.io/en/posts/socket/mac-socket/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/mac-socket/</guid>
      <description>macos下简单的socket服务器+客户端 TCP客户端服务器编程模型： 服务器： 调用socket函数创建套接字 调用bind绑定本地IP和端口</description>
    </item>
    
    <item>
      <title>mac下的socket调试工具sokit</title>
      <link>https://xinqinew.github.io/en/posts/socket/mac%E4%B8%8B%E7%9A%84socket%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7sokit/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/mac%E4%B8%8B%E7%9A%84socket%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7sokit/</guid>
      <description>sokit是一款非常简单易用的tcp、udp调试工具，主要适用于专业的网络管理使用，它可以轻松查看网内的数据情况，能够有效地接收、发送、转发</description>
    </item>
    
    <item>
      <title>setsockopt用法</title>
      <link>https://xinqinew.github.io/en/posts/socket/setsockopt%E7%94%A8%E6%B3%95/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/setsockopt%E7%94%A8%E6%B3%95/</guid>
      <description>setsockopt用法详解 在TCP连接中，recv等函数默认为阻塞模式(block)，即直到有数据到来之前函数不会返回，而我们有时则需要一</description>
    </item>
    
    <item>
      <title>单路实例</title>
      <link>https://xinqinew.github.io/en/posts/socket/%E5%8D%95%E8%B7%AF%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/%E5%8D%95%E8%B7%AF%E5%AE%9E%E4%BE%8B/</guid>
      <description>TCP 服务端 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>多路复用实例</title>
      <link>https://xinqinew.github.io/en/posts/socket/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate>
      <author>xinqinew@163.com (辛琪)</author>
      <guid>https://xinqinew.github.io/en/posts/socket/%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E5%AE%9E%E4%BE%8B/</guid>
      <description>服务端实例1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 // 这是多线程编程，这个函数只负责接</description>
    </item>
    
  </channel>
</rss>
