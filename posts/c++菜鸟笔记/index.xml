<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有C&#43;&#43;菜鸟笔记 - Hmily云笔记</title>
        <link>https://xinqinew.github.io/posts/c&#43;&#43;%E8%8F%9C%E9%B8%9F%E7%AC%94%E8%AE%B0/</link>
        <description>所有C&#43;&#43;菜鸟笔记 | Hmily云笔记</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xinqinew@163.com (辛琪)</managingEditor>
            <webMaster>xinqinew@163.com (辛琪)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 07 Aug 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://xinqinew.github.io/posts/c&#43;&#43;%E8%8F%9C%E9%B8%9F%E7%AC%94%E8%AE%B0/" rel="self" type="application/rss+xml" /><item>
    <title>C&#43;&#43; 笔记28数据抽象</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B028%E6%95%B0%E6%8D%AE%E6%8A%BD%E8%B1%A1/</link>
    <pubDate>Sat, 11 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B028%E6%95%B0%E6%8D%AE%E6%8A%BD%E8%B1%A1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 数据抽象 数据抽象是指，只向外界提供关键信息，并隐藏其后台的实现细节，即只表现必要的信息而不呈现细节。 就 C++ 编程而言，C++ 类为数据抽象提供了]]></description>
</item><item>
    <title>C&#43;&#43; 笔记29数据封装</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B029%E6%95%B0%E6%8D%AE%E5%B0%81%E8%A3%85/</link>
    <pubDate>Sat, 11 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B029%E6%95%B0%E6%8D%AE%E5%B0%81%E8%A3%85/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 数据封装 所有的 C++ 程序都有以下两个基本要素： **程序语句（代码）：**这是程序中执行动作的部分，它们被称为函数。 **程序数据：**数据是程序]]></description>
</item><item>
    <title>C&#43;&#43; 笔记30接口（抽象类）</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B030%E6%8E%A5%E5%8F%A3%E6%8A%BD%E8%B1%A1%E7%B1%BB/</link>
    <pubDate>Sat, 11 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B030%E6%8E%A5%E5%8F%A3%E6%8A%BD%E8%B1%A1%E7%B1%BB/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/runoob.png" referrerpolicy="no-referrer">
            </div>C++ 接口（抽象类） C++ 接口是使用抽象类来实现的，抽象类与数据抽象互不混淆，数据抽象是一个把实现细节与相关的数据分离开的概念。 如果类中至少有一个函]]></description>
</item><item>
    <title>C&#43;&#43; 笔记27多态</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B027%E5%A4%9A%E6%80%81/</link>
    <pubDate>Wed, 08 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B027%E5%A4%9A%E6%80%81/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 多态 多态按字面的意思就是多种形态。当类之间存在层次结构，并且类之间是通过继承关联时，就会用到多态。 C++ 多态意味着调用成员函数时，会根据调用函]]></description>
</item><item>
    <title>C&#43;&#43; 笔记25继承</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B025%E7%BB%A7%E6%89%BF/</link>
    <pubDate>Thu, 02 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B025%E7%BB%A7%E6%89%BF/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 继承 1 2 3 4 5 6 7 8 9 10 11 // 基类 class Animal { // eat() 函数 // sleep() 函数 }; //派生类 class Dog : public Animal { // bark() 函数 }; 基类 &amp; 派生类 类派生列表以一个或多个基类命名，形式如]]></description>
</item><item>
    <title>C&#43;&#43; 笔记26重载运算符和重载函数</title>
    <link>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B026%E9%87%8D%E8%BD%BD%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E9%87%8D%E8%BD%BD%E5%87%BD%E6%95%B0/</link>
    <pubDate>Thu, 02 Sep 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/09/c-%E7%AC%94%E8%AE%B026%E9%87%8D%E8%BD%BD%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E9%87%8D%E8%BD%BD%E5%87%BD%E6%95%B0/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 重载运算符和重载函数 C++ 中的函数重载 同名函数 print() 被用于输出不同的数据类型： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 #include]]></description>
</item><item>
    <title>C&#43;&#43; 笔记24类 &amp; 对象</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%AC%94%E8%AE%B024%E7%B1%BB-%E5%AF%B9%E8%B1%A1/</link>
    <pubDate>Fri, 27 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-%E7%AC%94%E8%AE%B024%E7%B1%BB-%E5%AF%B9%E8%B1%A1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 类 &amp; 对象 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 #include &lt;iostream&gt; using namespace std; class Box]]></description>
</item><item>
    <title>C&#43;&#43; 笔记19-20指针 &amp; 引用</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%AC%94%E8%AE%B019-20%E6%8C%87%E9%92%88-%E5%BC%95%E7%94%A8/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-%E7%AC%94%E8%AE%B019-20%E6%8C%87%E9%92%88-%E5%BC%95%E7%94%A8/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 指针 概念 描述 C++ Null 指针 C++ 支持空指针。NULL 指针是一个定义在标准库中的值为零的常量。 C++ 指针的算术运算 可以对指针进行四种算术运算：++、&nd]]></description>
</item><item>
    <title>C&#43;&#43; 笔记21日期 &amp; 时间</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%AC%94%E8%AE%B021%E6%97%A5%E6%9C%9F-%E6%97%B6%E9%97%B4/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-%E7%AC%94%E8%AE%B021%E6%97%A5%E6%9C%9F-%E6%97%B6%E9%97%B4/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 日期 &amp; 时间 有四个与时间相关的类型：clock_t、time_t、size_t 和 tm。类型 clock_t、size_t 和 time_t 能够把系统时间和日]]></description>
</item><item>
    <title>C&#43;&#43; 笔记22基本的输入输出</title>
    <link>https://xinqinew.github.io/2021/08/c-%E7%AC%94%E8%AE%B022%E5%9F%BA%E6%9C%AC%E7%9A%84%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</link>
    <pubDate>Tue, 24 Aug 2021 00:00:00 &#43;0000</pubDate><author>
        <name>辛琪</name>
    </author><guid>https://xinqinew.github.io/2021/08/c-%E7%AC%94%E8%AE%B022%E5%9F%BA%E6%9C%AC%E7%9A%84%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/images/C&#43;&#43;.jpg" referrerpolicy="no-referrer">
            </div>C++ 基本的输入输出 I/O 库头文件 下列的头文件在 C++ 编程中很重要。 头文件 函数和描述 &lt;iostream&gt; 该文件定义了 cin、cout、cerr 和 clog 对象，分别对应于标准输入]]></description>
</item></channel>
</rss>
